#!/usr/bin/env python3

import sys

# Dictionary mapping hex values to their corresponding virtual key names
vkey_dict = {
    '01': "VK_LBUTTON",
    '02': "VK_RBUTTON",
    '03': "VK_CANCEL",
    '04': "VK_MBUTTON",
    '05': "VK_XBUTTON1",
    '06': "VK_XBUTTON2",
    '07': "Reserved",
    '08': "VK_BACK",
    '09': "VK_TAB",
    '0A': "Reserved",
    '0B': "Reserved",
    '0C': "VK_CLEAR",
    '0D': "VK_RETURN",
    '0E': "Unassigned",
    '0F': "Unassigned",
    '10': "VK_SHIFT",
    '11': "VK_CONTROL",
    '12': "VK_MENU",
    '13': "VK_PAUSE",
    '14': "VK_CAPITAL",
    '15': "VK_KANA/VK_HANGUL",
    '16': "VK_IME_ON",
    '17': "VK_JUNJA",
    '18': "VK_FINAL",
    '19': "VK_HANJA/VK_KANJI",
    '1A': "VK_IME_OFF",
    '1B': "VK_ESCAPE",
    '1C': "VK_CONVERT",
    '1D': "VK_NONCONVERT",
    '1E': "VK_ACCEPT",
    '1F': "VK_MODECHANGE",
    '20': "VK_SPACE",
    '21': "VK_PRIOR",
    '22': "VK_NEXT",
    '23': "VK_END",
    '24': "VK_HOME",
    '25': "VK_LEFT",
    '26': "VK_UP",
    '27': "VK_RIGHT",
    '28': "VK_DOWN",
    '29': "VK_SELECT",
    '2A': "VK_PRINT",
    '2B': "VK_EXECUTE",
    '2C': "VK_SNAPSHOT",
    '2D': "VK_INSERT",
    '2E': "VK_DELETE",
    '2F': "VK_HELP",
    '30': "0",
    '31': "1",
    '32': "2",
    '33': "3",
    '34': "4",
    '35': "5",
    '36': "6",
    '37': "7",
    '38': "8",
    '39': "9",
    '3A': "Undefined",
    '3B': "Undefined",
    '3C': "Undefined",
    '3D': "Undefined",
    '3E': "Undefined",
    '3F': "Undefined",
    '40': "Undefined",
    '41': "A",
    '42': "B",
    '43': "C",
    '44': "D",
    '45': "E",
    '46': "F",
    '47': "G",
    '48': "H",
    '49': "I",
    '4A': "J",
    '4B': "K",
    '4C': "L",
    '4D': "M",
    '4E': "N",
    '4F': "O",
    '50': "P",
    '51': "Q",
    '52': "R",
    '53': "S",
    '54': "T",
    '55': "U",
    '56': "V",
    '57': "W",
    '58': "X",
    '59': "Y",
    '5A': "Z",
    '5B': "VK_LWIN",
    '5C': "VK_RWIN",
    '5D': "VK_APPS",
    '5E': "Reserved",
    '5F': "VK_SLEEP",
    '60': "VK_NUMPAD0",
    '61': "VK_NUMPAD1",
    '62': "VK_NUMPAD2",
    '63': "VK_NUMPAD3",
    '64': "VK_NUMPAD4",
    '65': "VK_NUMPAD5",
    '66': "VK_NUMPAD6",
    '67': "VK_NUMPAD7",
    '68': "VK_NUMPAD8",
    '69': "VK_NUMPAD9",
    '6A': "VK_MULTIPLY",
    '6B': "VK_ADD",
    '6C': "VK_SEPARATOR",
    '6D': "VK_SUBTRACT",
    '6E': "VK_DECIMAL",
    '6F': "VK_DIVIDE",
    '70': "VK_F1",
    '71': "VK_F2",
    '72': "VK_F3",
    '73': "VK_F4",
    '74': "VK_F5",
    '75': "VK_F6",
    '76': "VK_F7",
    '77': "VK_F8",
    '78': "VK_F9",
    '79': "VK_F10",
    '7A': "VK_F11",
    '7B': "VK_F12",
    '7C': "VK_F13",
    '7D': "VK_F14",
    '7E': "VK_F15",
    '7F': "VK_F16",
    '80': "VK_F17",
    '81': "VK_F18",
    '82': "VK_F19",
    '83': "VK_F20",
    '84': "VK_F21",
    '85': "VK_F22",
    '86': "VK_F23",
    '87': "VK_F24",
    '88': "Reserved",
    '89': "Reserved",
    '8A': "Reserved",
    '8B': "Reserved",
    '8C': "Reserved",
    '8D': "Reserved",
    '8E': "Reserved",
    '8F': "Reserved",
    '90': "VK_NUMLOCK",
    '91': "VK_SCROLL",
    '92': "OEM specific",
    '93': "OEM specific",
    '94': "OEM specific",
    '95': "OEM specific",
    '96': "OEM specific",
    '97': "Unassigned",
    '98': "Unassigned",
    '99': "Unassigned",
    '9A': "Unassigned",
    '9B': "Unassigned",
    '9C': "Unassigned",
    '9D': "Unassigned",
    '9E': "Unassigned",
    '9F': "Unassigned",
    'A0': "VK_LSHIFT",
    'A1': "VK_RSHIFT",
    'A2': "VK_LCONTROL",
    'A3': "VK_RCONTROL",
    'A4': "VK_LMENU",
    'A5': "VK_RMENU",
    'A6': "VK_BROWSER_BACK",
    'A7': "VK_BROWSER_FORWARD",
    'A8': "VK_BROWSER_REFRESH",
    'A9': "VK_BROWSER_STOP",
    'AA': "VK_BROWSER_SEARCH",
    'AB': "VK_BROWSER_FAVORITES",
    'AC': "VK_BROWSER_HOME",
    'AD': "VK_VOLUME_MUTE",
    'AE': "VK_VOLUME_DOWN",
    'AF': "VK_VOLUME_UP",
    'B0': "VK_MEDIA_NEXT_TRACK",
    'B1': "VK_MEDIA_PREV_TRACK",
    'B2': "VK_MEDIA_STOP",
    'B3': "VK_MEDIA_PLAY_PAUSE",
    'B4': "VK_LAUNCH_MAIL",
    'B5': "VK_LAUNCH_MEDIA_SELECT",
    'B6': "VK_LAUNCH_APP1",
    'B7': "VK_LAUNCH_APP2",
    'B8': "Reserved",
    'B9': "Reserved",
    'BA': "VK_OEM_1",
    'BB': "VK_OEM_PLUS",
    'BC': "VK_OEM_COMMA",
    'BD': "VK_OEM_MINUS",
    'BE': "VK_OEM_PERIOD",
    'BF': "VK_OEM_2",
    'C0': "VK_OEM_3",
    'C1': "Reserved",
    'C2': "Reserved",
    'C3': "Reserved",
    'C4': "Reserved",
    'C5': "Reserved",
    'C6': "Reserved",
    'C7': "Reserved",
    'C8': "Reserved",
    'C9': "Reserved",
    'CA': "Reserved",
    'CB': "Reserved",
    'CC': "Reserved",
    'CD': "Reserved",
    'CE': "Reserved",
    'CF': "Reserved",
    'D0': "Reserved",
    'D1': "Reserved",
    'D2': "Reserved",
    'D3': "Reserved",
    'D4': "Reserved",
    'D5': "Reserved",
    'D6': "Reserved",
    'D7': "Reserved",
    'D8': "Reserved",
    'D9': "Reserved",
    'DA': "Reserved",
    'DB': "VK_OEM_4",
    'DC': "VK_OEM_5",
    'DD': "VK_OEM_6",
    'DE': "VK_OEM_7",
    'DF': "VK_OEM_8",
    'E0': "Reserved",
    'E1': "OEM specific",
    'E2': "VK_OEM_102",
    'E3': "OEM specific",
    'E4': "OEM specific",
    'E5': "VK_PROCESSKEY",
    'E6': "OEM specific",
    'E7': "VK_PACKET",
    'E8': "Unassigned",
    'E9': "OEM specific",
    'EA': "OEM specific",
    'EB': "OEM specific",
    'EC': "OEM specific",
    'ED': "OEM specific",
    'EE': "OEM specific",
    'EF': "OEM specific",
    'F0': "OEM specific",
    'F1': "OEM specific",
    'F2': "OEM specific",
    'F3': "OEM specific",
    'F4': "OEM specific",
    'F5': "OEM specific",
    'F6': "VK_ATTN",
    'F7': "VK_CRSEL",
    'F8': "VK_EXSEL",
    'F9': "VK_EREOF",
    'FA': "VK_PLAY",
    'FB': "VK_ZOOM",
    'FC': "VK_NONAME",
    'FD': "VK_PA1",
    'FE': "VK_OEM_CLEAR"
}

def vkey_to_values(hex_string):
    # Split the input string into individual hex values
    hex_values = hex_string.split('\\x')[1:]
    
    # Convert each hex value to its decimal representation
    vkey_values = [vkey_dict[hex_value] for hex_value in hex_values]
    
    return vkey_values

if __name__ == "__main__":
    # Read input from standard input
    input_hex_string = sys.stdin.read().strip()
    
    # Ensure the input is not empty
    if not input_hex_string:
        print("[!] No input provided. Please provide a string of hexadecimal values.")
        sys.exit(1)
    
    # Get the decimal values
    vkey_values = vkey_to_values(input_hex_string)
    
    # Print the results
    print("[*] Result: ", vkey_values)
